// This file is auto-generated by @hey-api/openapi-ts
import { z } from 'zod'

export const zAddressDto = z.object({
  street: z.string().optional(),
  location: z.string().optional(),
  cityId: z.number().int().optional(),
  regionId: z.number().int().optional(),
})

export const zRoleDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
})

export const zUserUpdateDto = z.object({
  firstName: z.string().min(1),
  lastName: z.string().min(1),
  email: z.string().min(1),
  registrationDate: z.string().datetime().readonly().optional(),
  validationDate: z.string().datetime().readonly().optional(),
  enabled: z.boolean().optional(),
  phone: z
    .string()
    .regex(/^(?:\+229)?01\d{8}$/)
    .optional(),
  password: z.string().optional(),
  roles: z.array(zRoleDto).optional(),
  languageId: z.number().int(),
  address: zAddressDto,
  documents: z.array(z.file()).optional(),
  type: z.string(),
})

export const zAdminUpdateDto = zUserUpdateDto.and(
  z.object({
    type: z.literal('admin'),
  })
)

export const zCarrierUpdateDto = zUserUpdateDto
  .and(
    z.object({
      type: z.literal('carrier'),
    })
  )
  .and(
    z.object({
      pricePerKm: z.number(),
      regionIds: z.array(z.number().int()),
    })
  )

export const zExporterUpdateDto = zUserUpdateDto.and(
  z.object({
    type: z.literal('exporter'),
  })
)

export const zProducerUpdateDto = zUserUpdateDto
  .and(
    z.object({
      type: z.literal('producer'),
    })
  )
  .and(
    z.object({
      agriculturalIdentifier: z.string().min(1),
      cooperativeId: z.number().int().optional(),
    })
  )

export const zQualityInspectorUpdateDto = zUserUpdateDto.and(
  z.object({
    type: z.literal('quality_inspector'),
  })
)

export const zTraderUpdateDto = zUserUpdateDto.and(
  z.object({
    type: z.literal('trader'),
  })
)

export const zTransformerUpdateDto = zUserUpdateDto.and(
  z.object({
    type: z.literal('transformer'),
  })
)

export const zLanguageDto = z.object({
  id: z.number().int().readonly(),
  code: z.string().min(1),
  name: z.string().min(1),
})

export const zDocumentDto = z.object({
  id: z.number().int().readonly(),
  contentType: z.string().min(1),
  originalFilename: z.string().min(1),
  size: z.coerce.bigint().gte(BigInt(1)),
  extension: z.string().min(1),
  storagePath: z.string().min(1),
  uploadDate: z.string().datetime().readonly().optional(),
  userId: z.number().int(),
})

export const zUserDetailDto = z.object({
  id: z.number().int().readonly(),
  firstName: z.string().min(1),
  lastName: z.string().min(1),
  email: z.string().min(1),
  registrationDate: z.string().datetime().readonly().optional(),
  validationDate: z.string().datetime().readonly().optional(),
  enabled: z.boolean().optional(),
  phone: z
    .string()
    .regex(/^(?:\+229)?01\d{8}$/)
    .optional(),
  roles: z.array(zRoleDto).readonly().optional(),
  language: zLanguageDto,
  address: zAddressDto,
  documents: z.array(zDocumentDto).optional(),
  type: z.enum([
    'AdminListDto',
    'ProducerListDto',
    'TransformerListDto',
    'QualityInspectorListDto',
    'ExporterListDto',
    'CarrierListDto',
  ]),
})

export const zAdminDetailDto = zUserDetailDto.and(
  z.object({
    type: z.literal('admin'),
  })
)

export const zCarrierDetailDto = zUserDetailDto
  .and(
    z.object({
      type: z.literal('carrier'),
    })
  )
  .and(
    z.object({
      pricePerKm: z.number(),
      regionIds: z.array(z.number().int()),
    })
  )

export const zCooperativeDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
  creationDate: z.string().datetime(),
  presidentId: z.number().int(),
})

export const zTraderDetailDto = zUserDetailDto.and(
  z.object({
    type: z.literal('TraderDetailDto'),
  })
)

export const zExporterDetailDto = zTraderDetailDto

export const zProducerDetailDto = z.object({
  id: z.number().int().readonly(),
  firstName: z.string().min(1),
  lastName: z.string().min(1),
  email: z.string().min(1),
  registrationDate: z.string().datetime().readonly().optional(),
  validationDate: z.string().datetime().readonly().optional(),
  enabled: z.boolean().optional(),
  phone: z
    .string()
    .regex(/^(?:\+229)?01\d{8}$/)
    .optional(),
  roles: z.array(zRoleDto).readonly().optional(),
  language: zLanguageDto,
  address: zAddressDto,
  documents: z.array(zDocumentDto).optional(),
  agriculturalIdentifier: z.string().min(1),
  cooperative: zCooperativeDto.optional(),
  type: z.enum([
    'AdminListDto',
    'ProducerListDto',
    'TransformerListDto',
    'QualityInspectorListDto',
    'ExporterListDto',
    'CarrierListDto',
  ]),
})

export const zQualityInspectorDetailDto = zUserDetailDto.and(
  z.object({
    type: z.literal('quality_inspector'),
  })
)

export const zTransformerDetailDto = z.object({
  id: z.number().int().readonly(),
  firstName: z.string().min(1),
  lastName: z.string().min(1),
  email: z.string().min(1),
  registrationDate: z.string().datetime().readonly().optional(),
  validationDate: z.string().datetime().readonly().optional(),
  enabled: z.boolean().optional(),
  phone: z
    .string()
    .regex(/^(?:\+229)?01\d{8}$/)
    .optional(),
  roles: z.array(zRoleDto).readonly().optional(),
  language: zLanguageDto,
  address: zAddressDto,
  documents: z.array(zDocumentDto).optional(),
  type: z.enum([
    'AdminListDto',
    'ProducerListDto',
    'TransformerListDto',
    'QualityInspectorListDto',
    'ExporterListDto',
    'CarrierListDto',
  ]),
})

export const zErrorDetail = z.object({
  field: z.string().optional(),
  code: z.string(),
  message: z.string(),
})

export const zApiErrorResponse = z.object({
  status: z.number().int(),
  timestamp: z.string().datetime(),
  path: z.string(),
  code: z.string(),
  errors: z.array(zErrorDetail),
})

export const zStoreDetailDto = z.object({
  id: z.number().int().readonly(),
  name: z.string(),
  userId: z.number().int(),
  address: zAddressDto,
})

export const zRegionDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
})

export const zQualityControlUpdateDto = z.object({
  identifier: z.string().min(1),
  controlDate: z.string().datetime(),
  granularity: z.number(),
  korTest: z.number(),
  humidity: z.number(),
  qualityInspectorId: z.number().int(),
  productId: z.number().int(),
  qualityId: z.number().int(),
  documentId: z.number().int(),
})

export const zUserMiniDto = z.object({
  id: z.number().int().readonly(),
  firstName: z.string().min(1),
  lastName: z.string().min(1),
})

export const zQualityTypeDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
})

export const zQualityDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
  qualityType: zQualityTypeDto,
})

export const zQualityControlDto = z.object({
  id: z.number().int().readonly(),
  identifier: z.string().min(1),
  controlDate: z.string().datetime(),
  granularity: z.number(),
  korTest: z.number(),
  humidity: z.number(),
  qualityInspector: zUserMiniDto,
  quality: zQualityDto,
  document: zDocumentDto,
})

export const zQualityUpdateDto = z.object({
  name: z.string().min(1),
  qualityTypeId: z.number().int(),
})

export const zApiErrorErrors = z.object({
  path: z.string().optional(),
  message: z.string().optional(),
  errorCode: z.string().optional(),
})

export const zApiError = z.object({
  message: z.string().optional(),
  errors: z.array(zApiErrorErrors).optional(),
})

export const zProductUpdateDto = z.object({
  id: z.number().int().readonly(),
  deliveryDate: z.string().datetime().optional(),
  storeId: z.number().int(),
  weightKg: z.number().optional(),
  qualityControlId: z.number().int(),
  type: z.string(),
})

export const zHarvestProductUpdateDto = zProductUpdateDto
  .and(
    z.object({
      type: z.literal('harvest'),
    })
  )
  .and(
    z.object({
      producerId: z.number().int(),
      fieldId: z.number().int(),
    })
  )

export const zTransformedProductUpdateDto = zProductUpdateDto
  .and(
    z.object({
      type: z.literal('transformed'),
    })
  )
  .and(
    z.object({
      identifier: z.string().min(1),
      transformerId: z.number().int(),
    })
  )

export const zFieldDto = z.object({
  id: z.number().int().readonly(),
  identifier: z.string().optional(),
  address: zAddressDto,
  producer: zProducerDetailDto.optional(),
})

export const zProductDto = z.object({
  id: z.number().int().readonly(),
  deliveryDate: z.string().datetime().optional(),
  store: zStoreDetailDto,
  weightKg: z.number(),
  qualityControl: zQualityControlDto,
  type: z.enum(['harvest', 'transformed']),
})

export const zHarvestProductDto = zProductDto
  .and(
    z.object({
      type: z.literal('harvest'),
    })
  )
  .and(
    z.object({
      producer: zProducerDetailDto,
      field: zFieldDto,
    })
  )

export const zTransformedProductDto = zProductDto
  .and(
    z.object({
      type: z.literal('transformed'),
    })
  )
  .and(
    z.object({
      identifier: z.string().min(1),
      transformer: zTransformerDetailDto,
    })
  )

export const zCooperativeUpdateDto = z.object({
  name: z.string().min(1),
  creationDate: z.string().datetime(),
  presidentId: z.number().int(),
})

export const zContractOfferUpdateDto = z.object({
  status: z.string().min(1),
  pricePerKg: z.number(),
  creationDate: z.string().datetime().readonly(),
  endDate: z.string().datetime(),
  sellerId: z.number().int(),
  buyerId: z.number().int(),
  qualityId: z.number().int(),
})

export const zContractOfferDto = z.object({
  id: z.number().int().readonly(),
  status: z.string().min(1),
  pricePerKg: z.number(),
  creationDate: z.string().datetime().readonly(),
  endDate: z.string().datetime(),
  seller: zUserMiniDto,
  buyer: zUserMiniDto,
  quality: zQualityDto,
})

export const zAuctionOptionsUpdateDto = z.object({
  strategyId: z.number().int().optional(),
  fixedPriceKg: z.number().optional(),
  maxPriceKg: z.number().optional(),
  minPriceKg: z.number().optional(),
  buyNowPrice: z.number().optional(),
  showPublic: z.boolean().optional(),
  minIncrement: z.number().int().optional(),
})

export const zAuctionUpdateDto = z.object({
  price: z.number(),
  productQuantity: z.number().int(),
  expirationDate: z.string().datetime(),
  creationDate: z.string().datetime().readonly().optional(),
  active: z.boolean(),
  productId: z.number().int(),
  traderId: z.number().int(),
  statusId: z.number().int().optional(),
  options: zAuctionOptionsUpdateDto.optional(),
})

export const zTradeStatusDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
})

export const zBidDto = z.object({
  id: z.number().int().readonly(),
  amount: z.number(),
  creationDate: z.string().datetime().readonly(),
  auctionId: z.number().int(),
  trader: zUserMiniDto,
  status: zTradeStatusDto,
})

export const zAuctionStrategyDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
})

export const zAuctionOptionsDto = z.object({
  strategy: zAuctionStrategyDto.optional(),
  fixedPriceKg: z.number().optional(),
  maxPriceKg: z.number().optional(),
  minPriceKg: z.number().optional(),
  buyNowPrice: z.number().optional(),
  showPublic: z.boolean().optional(),
  minIncrement: z.number().int().optional(),
})

export const zAuctionDto = z.object({
  id: z.number().int().readonly(),
  price: z.number(),
  productQuantity: z.number().int(),
  expirationDate: z.string().datetime(),
  creationDate: z.string().datetime().readonly(),
  active: z.boolean(),
  product: z.union([zHarvestProductDto, zTransformedProductDto]),
  trader: zUserMiniDto,
  status: zTradeStatusDto,
  bids: z.array(zBidDto),
  options: zAuctionOptionsDto.optional(),
})

export const zBidUpdateDto = z.object({
  amount: z.number(),
  creationDate: z.string().datetime().readonly().optional(),
  auctionId: z.number().int(),
  traderId: z.number().int(),
  statusId: z.number().int().optional(),
})

export const zContactRequestDto = z.object({
  name: z.string().min(1),
  email: z.string().min(1),
  message: z.string().min(0).max(500),
})

export const zLoginRequest = z.object({
  username: z.string(),
  password: z.string(),
})

export const zUserListDto = z.object({
  id: z.number().int().readonly(),
  firstName: z.string().min(1),
  lastName: z.string().min(1),
  email: z.string().min(1),
  registrationDate: z.string().datetime().readonly().optional(),
  validationDate: z.string().datetime().readonly().optional(),
  enabled: z.boolean().optional(),
  phone: z
    .string()
    .regex(/^(?:\+229)?01\d{8}$/)
    .optional(),
  type: z.enum([
    'AdminListDto',
    'ProducerListDto',
    'TransformerListDto',
    'QualityInspectorListDto',
    'ExporterListDto',
    'CarrierListDto',
  ]),
})

export const zAdminListDto = zUserListDto.and(
  z.object({
    type: z.literal('admin'),
  })
)

export const zCarrierListDto = zUserListDto
  .and(
    z.object({
      type: z.literal('carrier'),
    })
  )
  .and(
    z.object({
      pricePerKm: z.number(),
    })
  )

export const zExporterListDto = z.object({
  id: z.number().int().readonly(),
  firstName: z.string().min(1),
  lastName: z.string().min(1),
  email: z.string().min(1),
  registrationDate: z.string().datetime().readonly().optional(),
  validationDate: z.string().datetime().readonly().optional(),
  enabled: z.boolean().optional(),
  phone: z
    .string()
    .regex(/^(?:\+229)?01\d{8}$/)
    .optional(),
  roles: z.array(zRoleDto).readonly().optional(),
  language: zLanguageDto,
  address: zAddressDto,
  documents: z.array(zDocumentDto).optional(),
  type: z.enum([
    'AdminListDto',
    'ProducerListDto',
    'TransformerListDto',
    'QualityInspectorListDto',
    'ExporterListDto',
    'CarrierListDto',
  ]),
})

export const zTraderListDto = zUserListDto.and(
  z.object({
    type: z.literal('TraderListDto'),
  })
)

export const zProducerListDto = zTraderListDto.and(
  z.object({
    agriculturalIdentifier: z.string().min(1),
    cooperative: zCooperativeDto,
  })
)

export const zQualityInspectorListDto = zUserListDto.and(
  z.object({
    type: z.literal('quality_inspector'),
  })
)

export const zTransformerListDto = zTraderListDto

export const zApplicationDataDto = z.object({
  languages: z.array(zLanguageDto),
})

export const zDeleteUserResponse = z.void()

export const zGetUserResponse = zUserDetailDto

export const zUpdateUserResponse = zUserDetailDto

export const zUpdateUserRolesResponse = zUserDetailDto

export const zDeleteStoreResponse = z.union([z.unknown(), z.void()])

export const zGetStoreResponse = zStoreDetailDto

export const zUpdateStoreResponse = zStoreDetailDto

export const zDeleteRegionResponse = z.union([z.unknown(), z.void()])

export const zGetRegionResponse = zRegionDto

export const zUpdateRegionResponse = zRegionDto

export const zDeleteQualityControlResponse = z.union([z.unknown(), z.void()])

export const zGetQualityControlResponse = zQualityControlDto

export const zUpdateQualityControlResponse = zQualityControlDto

export const zDeleteQualityResponse = z.union([z.unknown(), z.void()])

export const zDeleteProductResponse = z.union([z.unknown(), z.void()])

export const zGetProductResponse = zProductDto

export const zUpdateProductResponse = zProductDto

export const zDeleteLanguageResponse = z.void()

export const zGetLanguageResponse = zLanguageDto

export const zUpdateLanguageResponse = zLanguageDto

export const zDeleteFieldResponse = z.union([z.unknown(), z.void()])

export const zGetFieldResponse = zFieldDto

export const zUpdateFieldResponse = zFieldDto

export const zDeleteDocumentResponse = z.union([z.unknown(), z.void()])

export const zGetDocumentResponse = zDocumentDto

export const zUpdateDocumentResponse = zDocumentDto

export const zDeleteCooperativeResponse = z.union([z.unknown(), z.void()])

export const zGetCooperativeResponse = zCooperativeDto

export const zUpdateCooperativeResponse = zCooperativeDto

export const zDeleteContractOfferResponse = z.union([z.unknown(), z.void()])

export const zGetContractOfferResponse = zContractOfferDto

export const zUpdateContractOfferResponse = zContractOfferDto

export const zDeleteAuctionResponse = z.union([z.unknown(), z.void()])

export const zGetAuctionResponse = zAuctionDto

export const zUpdateAuctionResponse = zAuctionUpdateDto

export const zAcceptAuctionResponse = zAuctionDto

export const zDeleteBidResponse = z.union([z.unknown(), z.void()])

export const zGetBidResponse = zBidDto

export const zUpdateBidResponse = zBidDto

export const zRejectBidResponse = zBidDto

export const zAcceptBidResponse = zBidDto

export const zDeleteAuctionStrategyResponse = z.union([z.unknown(), z.void()])

export const zListUsersResponse = z.array(zUserListDto)

export const zCreateUserResponse = zUserDetailDto

export const zAddRoleToUserResponse = zUserDetailDto

export const zListStoresResponse = z.array(zStoreDetailDto)

export const zCreateStoreResponse = zStoreDetailDto

export const zListQualityControlsResponse = z.array(zQualityControlDto)

export const zCreateQualityControlResponse = zQualityControlDto

export const zListProductsResponse = z.array(zProductDto)

export const zCreateProductResponse = zProductDto

export const zListLanguagesResponse = z.array(zLanguageDto)

export const zCreateLanguageResponse = zLanguageDto

export const zListFieldsResponse = z.array(zFieldDto)

export const zCreateFieldResponse = zFieldDto

export const zCreateDocumentResponse = zDocumentDto

export const zListCooperativesResponse = z.array(zCooperativeDto)

export const zCreateCooperativeResponse = zCooperativeDto

export const zListContractOffersResponse = z.array(zContractOfferDto)

export const zCreateContractOfferResponse = zContractOfferDto

export const zAuthenticateUserResponse = zUserDetailDto

export const zListAuctionsResponse = z.array(zAuctionDto)

export const zCreateAuctionResponse = zAuctionUpdateDto

export const zListBidsResponse = z.array(zBidDto)

export const zCreateBidResponse = zBidDto

export const zListRegionsResponse = z.array(zRegionDto)

export const zListDocumentsByUserResponse = z.array(zDocumentDto)

export const zGetCurrentUserResponse = zUserDetailDto

export const zGetApplicationDataResponse = zApplicationDataDto
