// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zCooperativeDto = z.object({
    id: z.number().int().readonly().optional(),
    name: z.string().min(1),
    address: z.string().min(1),
    creationDate: z.iso.datetime(),
    presidentId: z.number().int()
});

export const zRoleDto = z.object({
    id: z.number().int().readonly().optional(),
    name: z.string().min(1)
});

export const zLanguageDto = z.object({
    id: z.number().int().readonly().optional(),
    name: z.string().min(1)
});

export const zProducerDetailDto = z.object({
    id: z.number().int().readonly().optional(),
    firstName: z.string().min(1),
    lastName: z.string().min(1),
    email: z.string().min(1),
    registrationDate: z.iso.datetime().readonly().optional(),
    validationDate: z.iso.datetime().readonly().optional(),
    enabled: z.boolean().optional(),
    address: z.string().optional(),
    phone: z.string().regex(/^(?:\+229)?(?:01[2-9]\d{7}|[2-9]\d{7})$/).optional(),
    password: z.string().optional(),
    roles: z.array(zRoleDto).readonly().optional(),
    language: zLanguageDto,
    agriculturalIdentifier: z.string().min(1),
    cooperative: zCooperativeDto.optional(),
    type: z.enum([
        'admin',
        'producer',
        'transformer',
        'quality_inspector',
        'exporter',
        'carrier'
    ])
});

export const zFieldDto = z.object({
    id: z.number().int().readonly().optional(),
    identifier: z.string().optional(),
    location: z.string().optional(),
    producer: zProducerDetailDto.optional()
});

export const zApiErrorErrors = z.object({
    path: z.string().optional(),
    message: z.string().optional(),
    errorCode: z.string().optional()
});

export const zApiError = z.object({
    message: z.string().optional(),
    errors: z.array(zApiErrorErrors).optional()
});

export const zUserDetailDto = z.object({
    id: z.number().int().readonly().optional(),
    firstName: z.string().min(1),
    lastName: z.string().min(1),
    email: z.string().min(1),
    registrationDate: z.iso.datetime().readonly().optional(),
    validationDate: z.iso.datetime().readonly().optional(),
    enabled: z.boolean().optional(),
    address: z.string().optional(),
    phone: z.string().regex(/^(?:\+229)?(?:01[2-9]\d{7}|[2-9]\d{7})$/).optional(),
    password: z.string().optional(),
    roles: z.array(zRoleDto).readonly().optional(),
    language: zLanguageDto,
    type: z.enum([
        'admin',
        'producer',
        'transformer',
        'quality_inspector',
        'exporter',
        'carrier'
    ])
});

export const zAdminDetailDto = zUserDetailDto;

export const zCarrierDetailDto = zUserDetailDto.and(z.object({
    pricePerKm: z.number(),
    regionIds: z.array(z.number().int())
}));

export const zTraderDetailDto = zUserDetailDto;

export const zExporterDetailDto = zTraderDetailDto;

export const zQualityInspectorDetailDto = zUserDetailDto;

export const zTransformerDetailDto = z.object({
    id: z.number().int().readonly().optional(),
    firstName: z.string().min(1),
    lastName: z.string().min(1),
    email: z.string().min(1),
    registrationDate: z.iso.datetime().readonly().optional(),
    validationDate: z.iso.datetime().readonly().optional(),
    enabled: z.boolean().optional(),
    address: z.string().optional(),
    phone: z.string().regex(/^(?:\+229)?(?:01[2-9]\d{7}|[2-9]\d{7})$/).optional(),
    password: z.string().optional(),
    roles: z.array(zRoleDto).readonly().optional(),
    language: zLanguageDto,
    type: z.enum([
        'admin',
        'producer',
        'transformer',
        'quality_inspector',
        'exporter',
        'carrier'
    ])
});

export const zErrorDetail = z.object({
    field: z.string().optional(),
    message: z.string()
});

export const zApiErrorResponse = z.object({
    status: z.number().int(),
    timestamp: z.iso.datetime(),
    path: z.string(),
    code: z.string(),
    errors: z.array(zErrorDetail)
});

export const zStoreDetailDto = z.object({
    id: z.number().int().readonly().optional(),
    location: z.string(),
    userId: z.number().int()
});

export const zRegionDto = z.object({
    id: z.number().int().readonly().optional(),
    name: z.string().min(1)
});

export const zQualityDto = z.object({
    id: z.number().int().readonly().optional(),
    name: z.string().min(1)
});

export const zProductDto = z.object({
    id: z.number().int().readonly().optional(),
    deliveryDate: z.iso.datetime().optional(),
    weightKg: z.number().optional(),
    qualityControlId: z.number().int().optional(),
    type: z.enum([
        'harvest',
        'transformed'
    ])
});

export const zHarvestProductDto = zProductDto.and(z.object({
    type: z.literal('harvest')
})).and(z.object({
    store: zStoreDetailDto,
    producer: zProducerDetailDto,
    field: zFieldDto
}));

export const zTransformedProductDto = zProductDto.and(z.object({
    type: z.literal('transformed')
})).and(z.object({
    identifier: z.string().min(1),
    location: z.string().min(1),
    transformer: zTransformerDetailDto
}));

export const zDocumentDto = z.object({
    id: z.number().int().readonly().optional(),
    documentType: z.string().min(1),
    format: z.string().min(1),
    storagePath: z.string().min(1),
    uploadDate: z.iso.datetime().readonly().optional(),
    userId: z.number().int()
});

export const zContractOfferDto = z.object({
    id: z.number().int().readonly().optional(),
    status: z.string().min(1),
    pricePerKg: z.number(),
    creationDate: z.iso.datetime().readonly(),
    endDate: z.iso.datetime(),
    seller: z.union([
        zExporterDetailDto,
        zProducerDetailDto,
        zTransformerDetailDto
    ]),
    buyer: z.union([
        zExporterDetailDto,
        zProducerDetailDto,
        zTransformerDetailDto
    ]),
    quality: zQualityDto
});

export const zAuctionStrategyDto = z.object({
    id: z.number().int().readonly().optional(),
    name: z.string().min(1)
});

export const zAuctionOptionDto = z.object({
    id: z.number().int().readonly().optional(),
    name: z.string().min(1)
});

export const zAuctionOptionValueDto = z.object({
    id: z.number().int().readonly().optional(),
    auctionOption: zAuctionOptionDto,
    optionValue: z.string().min(1)
});

export const zAuctionDto = z.object({
    id: z.number().int().readonly().optional(),
    price: z.number(),
    productQuantity: z.number().int(),
    expirationDate: z.iso.datetime(),
    creationDate: z.iso.datetime().readonly().optional(),
    active: z.boolean(),
    strategy: zAuctionStrategyDto,
    product: z.union([
        zHarvestProductDto,
        zTransformedProductDto
    ]),
    auctionOptionValues: z.array(zAuctionOptionValueDto).optional()
});

export const zBidStatusDto = z.object({
    id: z.number().int().readonly().optional(),
    name: z.string().min(1)
});

export const zBidDto = z.object({
    id: z.number().int().readonly().optional(),
    amount: z.number(),
    auctionDate: z.iso.datetime(),
    creationDate: z.iso.datetime().readonly().optional(),
    auction: zAuctionDto,
    trader: z.union([
        zExporterDetailDto,
        zProducerDetailDto,
        zTransformerDetailDto
    ]),
    status: zBidStatusDto
});

export const zLoginRequest = z.object({
    username: z.string(),
    password: z.string()
});

export const zUserListDto = z.object({
    id: z.number().int().readonly().optional(),
    firstName: z.string().min(1),
    lastName: z.string().min(1),
    email: z.string().min(1),
    registrationDate: z.iso.datetime().readonly().optional(),
    validationDate: z.iso.datetime().readonly().optional(),
    enabled: z.boolean().optional(),
    address: z.string().optional(),
    phone: z.string().regex(/^(?:\+229)?(?:01[2-9]\d{7}|[2-9]\d{7})$/).optional(),
    password: z.string().optional(),
    type: z.enum([
        'admin',
        'producer',
        'transformer',
        'quality_inspector',
        'exporter',
        'carrier'
    ])
});

export const zAdminListDto = zUserListDto.and(z.object({
    type: z.literal('AdminListDto')
}));

export const zCarrierListDto = zUserListDto.and(z.object({
    type: z.literal('CarrierListDto')
})).and(z.object({
    pricePerKm: z.number()
}));

export const zTraderListDto = zUserListDto.and(z.object({
    type: z.literal('TraderListDto')
}));

export const zProducerListDto = zTraderListDto.and(z.object({
    agriculturalIdentifier: z.string().min(1),
    cooperative: zCooperativeDto
}));

export const zQualityInspectorListDto = zUserListDto.and(z.object({
    type: z.literal('QualityInspectorListDto')
}));

export const zTransformerListDto = zTraderListDto;

export const zDeleteFieldResponse = z.void();

export const zDeleteUserResponse = z.void();

export const zGetUserResponse = zUserDetailDto;

export const zUpdateUserResponse = zUserDetailDto;

export const zUpdateUserRolesResponse = zUserDetailDto;

export const zDeleteStoreResponse = z.void();

export const zDeleteRegionResponse = z.void();

export const zDeleteQualityResponse = z.void();

export const zDeleteProductResponse = z.void();

export const zDeleteDocumentResponse = z.void();

export const zDeleteCooperativeResponse = z.void();

export const zDeleteContractOfferResponse = z.void();

export const zDeleteAuctionResponse = z.void();

export const zDeleteBidResponse = z.void();

export const zDeleteAuctionStrategyResponse = z.void();

export const zListUsersResponse = z.array(z.unknown());

export const zCreateUserResponse = zUserDetailDto;

export const zAddRoleToUserResponse = zUserDetailDto;

export const zAuthenticateUserResponse = zUserDetailDto;

export const zListAuctionsResponse = z.array(zAuctionDto);

export const zGetCurrentUserResponse = zUserDetailDto;