// This file is auto-generated by @hey-api/openapi-ts
import z from 'zod/v4'

export const zAddressUpdateDto = z.object({
  street: z.string().optional(),
  location: z.string().optional(),
  cityId: z.number().int().optional(),
  regionId: z.number().int().optional(),
})

export const zUserUpdateDto = z.object({
  firstName: z.string().optional(),
  lastName: z.string().optional(),
  email: z.email().optional(),
  enabled: z.boolean().optional(),
  phone: z
    .string()
    .regex(/^\+22901\d{8}$/)
    .optional(),
  password: z.string().optional(),
  languageId: z.number().int().optional(),
  address: zAddressUpdateDto.optional(),
  type: z.string(),
})

export const zAdminUpdateDto = zUserUpdateDto.and(
  z.object({
    type: z.literal('admin'),
  })
)

export const zCarrierUpdateDto = zUserUpdateDto
  .and(
    z.object({
      type: z.literal('carrier'),
    })
  )
  .and(
    z.object({
      pricePerKm: z.number().gte(1),
      radius: z.number().gte(1),
    })
  )

export const zExporterUpdateDto = zUserUpdateDto.and(
  z.object({
    type: z.literal('exporter'),
  })
)

export const zProducerUpdateDto = zUserUpdateDto
  .and(
    z.object({
      type: z.literal('producer'),
    })
  )
  .and(
    z.object({
      agriculturalIdentifier: z.string().min(1),
      cooperativeId: z.number().int().optional(),
    })
  )

export const zQualityInspectorUpdateDto = zUserUpdateDto.and(
  z.object({
    type: z.literal('quality_inspector'),
  })
)

export const zTraderUpdateDto = zUserUpdateDto.and(
  z.object({
    type: z.literal('trader'),
  })
)

export const zTransformerUpdateDto = zUserUpdateDto.and(
  z.object({
    type: z.literal('transformer'),
  })
)

export const zAddressDto = z.object({
  street: z.string().optional(),
  location: z.string(),
  cityId: z.number().int(),
  regionId: z.number().int().optional(),
})

export const zLanguageDto = z.object({
  id: z.number().int().readonly(),
  code: z.string().min(1),
  name: z.string().min(1),
})

export const zDocumentDto = z.object({
  id: z.number().int().readonly(),
  contentType: z.string().min(1),
  originalFilename: z.string().min(1),
  size: z.coerce.bigint().gte(BigInt(1)),
  extension: z.string().min(1),
  storagePath: z.string().min(1),
  uploadDate: z.iso.datetime().readonly().optional(),
  userId: z.number().int(),
})

export const zUserDetailDto = z.object({
  id: z.number().int().readonly(),
  firstName: z.string().min(1),
  lastName: z.string().min(1),
  email: z.string().min(1),
  registrationDate: z.iso.datetime().readonly().optional(),
  validationDate: z.iso.datetime().readonly().optional(),
  enabled: z.boolean().optional(),
  phone: z
    .string()
    .regex(/^\+22901\d{8}$/)
    .optional(),
  language: zLanguageDto,
  address: zAddressDto,
  documents: z.array(zDocumentDto).optional(),
  type: z.enum([
    'admin',
    'producer',
    'transformer',
    'quality_inspector',
    'exporter',
    'carrier',
    'trader',
  ]),
})

export const zAdminDetailDto = zUserDetailDto.and(
  z.object({
    type: z.literal('admin'),
  })
)

export const zCarrierDetailDto = zUserDetailDto
  .and(
    z.object({
      type: z.literal('carrier'),
    })
  )
  .and(
    z.object({
      pricePerKm: z.number(),
      radius: z.number(),
    })
  )

export const zCooperativeDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
  creationDate: z.iso.datetime(),
  presidentId: z.number().int(),
})

export const zTraderDetailDto = zUserDetailDto.and(
  z.object({
    type: z.literal('trader'),
  })
)

export const zExporterDetailDto = zTraderDetailDto

export const zProducerDetailDto = zTraderDetailDto.and(
  z.object({
    agriculturalIdentifier: z.string().min(1),
    cooperative: zCooperativeDto.optional(),
  })
)

export const zQualityInspectorDetailDto = zUserDetailDto.and(
  z.object({
    type: z.literal('quality_inspector'),
  })
)

export const zTransformerDetailDto = zTraderDetailDto

export const zErrorDetail = z.object({
  field: z.string().optional(),
  code: z.string(),
  message: z.string(),
})

export const zApiErrorResponse = z.object({
  status: z.number().int(),
  timestamp: z.iso.datetime(),
  path: z.string(),
  code: z.string(),
  errors: z.array(zErrorDetail),
})

export const zStoreUpdateDto = z.object({
  name: z.string(),
  userId: z.number().int(),
  address: zAddressUpdateDto,
})

export const zRegionDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
})

export const zQualityControlUpdateDto = z.object({
  identifier: z.string().min(1),
  controlDate: z.iso.datetime(),
  granularity: z.number(),
  korTest: z.number(),
  humidity: z.number(),
  qualityInspectorId: z.number().int(),
  qualityId: z.number().int(),
})

export const zUserMiniDto = z.object({
  id: z.number().int().readonly(),
  firstName: z.string().min(1),
  lastName: z.string().min(1),
})

export const zQualityTypeDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
})

export const zQualityDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
  qualityType: zQualityTypeDto,
})

export const zQualityControlDto = z.object({
  id: z.number().int().readonly(),
  identifier: z.string().min(1),
  controlDate: z.iso.datetime(),
  granularity: z.number(),
  korTest: z.number(),
  humidity: z.number(),
  qualityInspector: zUserMiniDto,
  quality: zQualityDto,
  documents: z.array(zDocumentDto).optional(),
})

export const zQualityUpdateDto = z.object({
  name: z.string().min(1),
  qualityTypeId: z.number().int(),
})

export const zProductUpdateDto = z.object({
  id: z.number().int().readonly(),
  deliveryDate: z.iso.datetime().optional(),
  storeId: z.number().int(),
  weightKg: z.number().optional(),
  weightKgAvailable: z.number().optional(),
  qualityControlId: z.number().int(),
  type: z.string(),
})

export const zHarvestProductUpdateDto = zProductUpdateDto
  .and(
    z.object({
      type: z.literal('harvest'),
    })
  )
  .and(
    z.object({
      producerId: z.number().int(),
      fieldId: z.number().int(),
      transformedProductId: z.number().int().optional(),
    })
  )

export const zTransformedProductUpdateDto = zProductUpdateDto
  .and(
    z.object({
      type: z.literal('transformed'),
    })
  )
  .and(
    z.object({
      identifier: z.string().min(1),
      transformerId: z.number().int(),
      harvestProductIds: z.array(z.number().int()).optional(),
    })
  )

export const zFieldDto = z.object({
  id: z.number().int().readonly(),
  identifier: z.string().optional(),
  address: zAddressDto,
  producer: zProducerDetailDto.optional(),
})

export const zStoreDetailDto = z.object({
  id: z.number().int().readonly(),
  name: z.string(),
  userId: z.number().int(),
  address: zAddressDto,
})

export const zProductDto = z.object({
  id: z.number().int().readonly(),
  deliveryDate: z.iso.datetime().optional(),
  store: zStoreDetailDto,
  weightKg: z.number(),
  weightKgAvailable: z.number(),
  qualityControl: zQualityControlDto,
  type: z.enum(['harvest', 'transformed']),
})

export const zHarvestProductDto = zProductDto
  .and(
    z.object({
      type: z.literal('harvest'),
    })
  )
  .and(
    z.object({
      producer: zProducerDetailDto,
      field: zFieldDto,
    })
  )

export const zTransformedProductDto = zProductDto
  .and(
    z.object({
      type: z.literal('transformed'),
    })
  )
  .and(
    z.object({
      identifier: z.string().min(1),
      transformer: zTransformerDetailDto,
      harvestProducts: z.array(zHarvestProductDto).optional(),
    })
  )

export const zNewsUpdateDto = z.object({
  title: z.string().optional(),
  content: z.string().optional(),
  publicationDate: z.iso.datetime().optional(),
  categoryId: z.number().int().optional(),
  authorName: z.string().optional(),
})

export const zNewsCategoryDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
  description: z.string().optional(),
})

export const zFieldUpdateDto = z.object({
  identifier: z.string().optional(),
  address: zAddressUpdateDto,
  producerId: z.number().int(),
})

export const zCooperativeUpdateDto = z.object({
  name: z.string().min(1),
  creationDate: z.iso.datetime().optional(),
  presidentId: z.number().int(),
})

export const zContractOfferUpdateDto = z.object({
  status: z.string().min(1),
  pricePerKg: z.number(),
  creationDate: z.iso.datetime().readonly(),
  endDate: z.iso.datetime(),
  sellerId: z.number().int(),
  buyerId: z.number().int(),
  qualityId: z.number().int(),
})

export const zContractOfferDto = z.object({
  id: z.number().int().readonly(),
  status: z.string().min(1),
  pricePerKg: z.number(),
  creationDate: z.iso.datetime().readonly(),
  endDate: z.iso.datetime(),
  seller: zUserMiniDto,
  buyer: zUserMiniDto,
  quality: zQualityDto,
})

export const zBidUpdateDto = z.object({
  amount: z.number(),
  creationDate: z.iso.datetime().readonly().optional(),
  auctionId: z.number().int(),
  traderId: z.number().int(),
  statusId: z.number().int().optional(),
})

export const zTradeStatusDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
})

export const zBidDto = z.object({
  id: z.number().int().readonly(),
  amount: z.number(),
  creationDate: z.iso.datetime().readonly(),
  auctionId: z.number().int(),
  trader: zUserMiniDto,
  status: zTradeStatusDto,
})

export const zAuctionOptionsUpdateDto = z.object({
  strategyId: z.number().int().optional(),
  fixedPriceKg: z.number().optional(),
  maxPriceKg: z.number().optional(),
  minPriceKg: z.number().optional(),
  buyNowPrice: z.number().optional(),
  showPublic: z.boolean().optional(),
  forceBetterBids: z.boolean().optional(),
  minIncrement: z.number().int().optional(),
})

export const zAuctionUpdateDto = z.object({
  price: z.number(),
  productQuantity: z.number().int(),
  expirationDate: z.iso.datetime(),
  active: z.boolean(),
  productId: z.number().int(),
  traderId: z.number().int(),
  statusId: z.number().int().optional(),
  options: zAuctionOptionsUpdateDto.optional(),
})

export const zAuctionStrategyDto = z.object({
  id: z.number().int().readonly(),
  name: z.string().min(1),
})

export const zAuctionOptionsDto = z.object({
  strategy: zAuctionStrategyDto.optional(),
  fixedPriceKg: z.number().optional(),
  maxPriceKg: z.number().optional(),
  minPriceKg: z.number().optional(),
  buyNowPrice: z.number().optional(),
  showPublic: z.boolean().optional(),
  forceBetterBids: z.boolean().optional(),
  minIncrement: z.number().int().optional(),
})

export const zAuctionDto = z.object({
  id: z.number().int().readonly(),
  price: z.number(),
  productQuantity: z.number().int(),
  expirationDate: z.iso.datetime(),
  creationDate: z.iso.datetime().readonly(),
  active: z.boolean(),
  product: z.union([zHarvestProductDto, zTransformedProductDto]),
  trader: zUserMiniDto,
  status: zTradeStatusDto,
  bids: z.array(zBidDto),
  options: zAuctionOptionsDto.optional(),
})

export const zGlobalSettingsUpdateDto = z.object({
  defaultStrategyId: z.number().int().optional(),
  defaultFixedPriceKg: z.number().optional(),
  defaultMaxPriceKg: z.number().optional(),
  defaultMinPriceKg: z.number().optional(),
  showOnlyActive: z.boolean(),
  forceBetterBids: z.boolean(),
  minIncrement: z.number().int().optional(),
})

export const zGlobalSettingsDto = z.object({
  defaultStrategy: zAuctionStrategyDto.optional(),
  defaultFixedPriceKg: z.number().optional(),
  defaultMaxPriceKg: z.number().optional(),
  defaultMinPriceKg: z.number().optional(),
  showOnlyActive: z.boolean().optional(),
  forceBetterBids: z.boolean(),
  minIncrement: z.number().int().optional(),
})

export const zUserCreateDto = z.object({
  firstName: z.string().min(1),
  lastName: z.string().min(1),
  email: z.email(),
  registrationDate: z.iso.datetime().readonly().optional(),
  validationDate: z.iso.datetime().readonly().optional(),
  enabled: z.boolean().optional(),
  phone: z
    .string()
    .min(1)
    .regex(/^\+22901\d{8}$/),
  password: z.string(),
  languageId: z.number().int(),
  address: zAddressDto,
  type: z.string(),
})

export const zAdminCreateDto = zUserCreateDto.and(
  z.object({
    type: z.literal('admin'),
  })
)

export const zCarrierCreateDto = zUserCreateDto
  .and(
    z.object({
      type: z.literal('carrier'),
    })
  )
  .and(
    z.object({
      pricePerKm: z.number().gte(1),
      radius: z.number().gte(1),
    })
  )

export const zExporterCreateDto = zUserCreateDto.and(
  z.object({
    type: z.literal('exporter'),
  })
)

export const zProducerCreateDto = zUserCreateDto
  .and(
    z.object({
      type: z.literal('producer'),
    })
  )
  .and(
    z.object({
      agriculturalIdentifier: z.string().min(1),
      cooperativeId: z.number().int().optional(),
    })
  )

export const zQualityInspectorCreateDto = zUserCreateDto.and(
  z.object({
    type: z.literal('quality_inspector'),
  })
)

export const zTraderCreateDto = zUserCreateDto.and(
  z.object({
    type: z.literal('trader'),
  })
)

export const zTransformerCreateDto = zUserCreateDto.and(
  z.object({
    type: z.literal('transformer'),
  })
)

export const zNewsCreateDto = z.object({
  title: z.string().min(1),
  content: z.string().min(1),
  publicationDate: z.iso.datetime().optional(),
  categoryId: z.number().int(),
  authorName: z.string().optional(),
})

export const zContactRequestDto = z.object({
  name: z.string().min(1),
  email: z.string().min(1),
  message: z.string().min(0).max(500),
})

export const zLoginRequest = z.object({
  username: z.string(),
  password: z.string(),
})

export const zUserListDto = z.object({
  id: z.number().int().readonly(),
  firstName: z.string().min(1),
  lastName: z.string().min(1),
  email: z.string().min(1),
  registrationDate: z.iso.datetime().readonly().optional(),
  validationDate: z.iso.datetime().readonly().optional(),
  enabled: z.boolean().optional(),
  phone: z
    .string()
    .regex(/^\+22901\d{8}$/)
    .optional(),
  type: z.enum([
    'admin',
    'producer',
    'transformer',
    'quality_inspector',
    'exporter',
    'carrier',
    'trader',
  ]),
})

export const zAdminListDto = zUserListDto.and(
  z.object({
    type: z.literal('admin'),
  })
)

export const zCarrierListDto = zUserListDto
  .and(
    z.object({
      type: z.literal('carrier'),
    })
  )
  .and(
    z.object({
      pricePerKm: z.number(),
      radius: z.number(),
    })
  )

export const zExporterListDto = z.object({
  id: z.number().int().readonly(),
  firstName: z.string().min(1),
  lastName: z.string().min(1),
  email: z.string().min(1),
  registrationDate: z.iso.datetime().readonly().optional(),
  validationDate: z.iso.datetime().readonly().optional(),
  enabled: z.boolean().optional(),
  phone: z
    .string()
    .regex(/^\+22901\d{8}$/)
    .optional(),
  language: zLanguageDto,
  address: zAddressDto,
  documents: z.array(zDocumentDto).optional(),
  type: z.enum([
    'admin',
    'producer',
    'transformer',
    'quality_inspector',
    'exporter',
    'carrier',
    'trader',
  ]),
})

export const zTraderListDto = zUserListDto.and(
  z.object({
    type: z.literal('trader'),
  })
)

export const zProducerListDto = zTraderListDto.and(
  z.object({
    agriculturalIdentifier: z.string().min(1),
    cooperativeId: z.number().int(),
  })
)

export const zQualityInspectorListDto = zUserListDto.and(
  z.object({
    type: z.literal('quality_inspector'),
  })
)

export const zTransformerListDto = zTraderListDto

export const zSseEmitter = z.object({
  timeout: z.coerce.bigint().optional(),
})

export const zNewsDto = z.object({
  id: z.number().int().readonly(),
  title: z.string().min(1),
  content: z.string().optional(),
  creationDate: z.iso.datetime().readonly().optional(),
  publicationDate: z.iso.datetime(),
  category: zNewsCategoryDto,
  authorName: z.string().optional(),
})

export const zNewsPageDto = z.object({
  content: z.array(zNewsDto).optional(),
  totalPages: z.number().int().optional(),
  totalElements: z.coerce.bigint().optional(),
  number: z.number().int().optional(),
  size: z.number().int().optional(),
  first: z.boolean().optional(),
  last: z.boolean().optional(),
  numberOfElements: z.number().int().optional(),
  empty: z.boolean().optional(),
})

export const zApplicationDataDto = z.object({
  languages: z.array(zLanguageDto),
})

export const zDashboardGraphicDto = z.object({
  date: z.iso.datetime().optional(),
  totalOpenAuctions: z.coerce.bigint().optional(),
  totalNewAuctions: z.coerce.bigint().optional(),
})

export const zDashboardCardsDto = z.object({
  totalNbUsers: z.coerce.bigint().optional(),
  totalNbUsersTendency: z.number().optional(),
  pendingValidation: z.coerce.bigint().optional(),
  pendingValidationTendency: z.number().optional(),
  totalAuctions: z.coerce.bigint().optional(),
  totalAuctionsTendency: z.number().optional(),
  auctionsConcluded: z.coerce.bigint().optional(),
  auctionsConcludedTendency: z.number().optional(),
  totalLotWeightKg: z.number().optional(),
  totalLotWeightKgTendency: z.number().optional(),
  totalSoldWeightKg: z.number().optional(),
  totalSoldWeightKgTendency: z.number().optional(),
  totalSalesAmount: z.number().optional(),
  totalSalesAmountTendency: z.number().optional(),
  monthlySalesAmount: z.number().optional(),
  monthlySalesAmountTendency: z.number().optional(),
  grade1Price: z.number().optional(),
  grade1PriceTendency: z.number().optional(),
  grade2Price: z.number().optional(),
  grade2PriceTendency: z.number().optional(),
  grade3Price: z.number().optional(),
  grade3PriceTendency: z.number().optional(),
  horsCategoryPrice: z.number().optional(),
  horsCategoryTendency: z.number().optional(),
  transformedPrice: z.number().optional(),
  transformedPriceTendency: z.number().optional(),
})

export const zApiErrorErrors = z.object({
  path: z.string().optional(),
  message: z.string().optional(),
  errorCode: z.string().optional(),
})

export const zApiError = z.object({
  message: z.string().optional(),
  errors: z.array(zApiErrorErrors).optional(),
})

export const zDeleteUserResponse = z.void()

export const zUpdateUserResponse = zUserDetailDto

export const zDeleteStoreResponse = z.union([z.unknown(), z.void()])

export const zGetStoreResponse = zStoreDetailDto

export const zUpdateStoreResponse = zStoreUpdateDto

export const zDeleteRegionResponse = z.union([z.unknown(), z.void()])

export const zGetRegionResponse = zRegionDto

export const zUpdateRegionResponse = zRegionDto

export const zDeleteQualityControlResponse = z.union([z.unknown(), z.void()])

export const zGetQualityControlResponse = zQualityControlDto

export const zUpdateQualityControlResponse = zQualityControlDto

export const zDeleteQualityResponse = z.union([z.unknown(), z.void()])

export const zGetQualityResponse = zQualityDto

export const zUpdateQualityResponse = zQualityDto

export const zDeleteProductResponse = z.union([z.unknown(), z.void()])

export const zGetProductResponse = zProductDto

export const zUpdateProductResponse = zProductDto

export const zDeleteNewsResponse = z.void()

export const zGetNewsResponse = zNewsDto

export const zUpdateNewsResponse = zNewsUpdateDto

export const zDeleteNewsCategoryResponse = z.void()

export const zGetNewsCategoryResponse = zNewsCategoryDto

export const zUpdateNewsCategoryResponse = zNewsCategoryDto

export const zDeleteLanguageResponse = z.void()

export const zGetLanguageResponse = zLanguageDto

export const zUpdateLanguageResponse = zLanguageDto

export const zDeleteFieldResponse = z.union([z.unknown(), z.void()])

export const zGetFieldResponse = zFieldDto

export const zUpdateFieldResponse = zFieldUpdateDto

export const zDeleteCooperativeResponse = z.union([z.unknown(), z.void()])

export const zGetCooperativeResponse = zCooperativeDto

export const zUpdateCooperativeResponse = zCooperativeDto

export const zDeleteContractOfferResponse = z.union([z.unknown(), z.void()])

export const zGetContractOfferResponse = zContractOfferDto

export const zUpdateContractOfferResponse = zContractOfferDto

export const zRejectContractOfferResponse = zContractOfferDto

export const zAcceptContractOfferResponse = zContractOfferDto

export const zDeleteBidResponse = z.union([z.unknown(), z.void()])

export const zGetBidResponse = zBidDto

export const zUpdateBidResponse = zBidDto

export const zRejectBidResponse = zBidDto

export const zAcceptBidResponse = zBidDto

export const zDeleteAuctionResponse = z.union([z.unknown(), z.void()])

export const zGetAuctionResponse = zAuctionDto

export const zUpdateAuctionResponse = zAuctionUpdateDto

export const zAcceptAuctionResponse = zAuctionDto

export const zDeleteAuctionStrategyResponse = z.union([z.unknown(), z.void()])

export const zGetAuctionStrategyResponse = zAuctionStrategyDto

export const zUpdateAuctionStrategyResponse = zAuctionStrategyDto

export const zGetGlobalSettingsResponse = zGlobalSettingsDto

export const zUpdateGlobalSettingsResponse = zGlobalSettingsDto

export const zListUsersResponse = z.array(zUserListDto)

export const zCreateUserResponse = zUserDetailDto

export const zListStoresResponse = z.array(zStoreDetailDto)

export const zCreateStoreResponse = zStoreUpdateDto

export const zListQualityControlsResponse = z.array(zQualityControlDto)

export const zCreateQualityControlResponse = zQualityControlDto

export const zListQualitiesResponse = z.array(zQualityDto)

export const zCreateQualityResponse = zQualityDto

export const zListProductsResponse = z.array(zProductDto)

export const zCreateProductResponse = zProductDto

export const zListNewsResponse = zNewsPageDto

export const zCreateNewsResponse = zNewsCreateDto

export const zListNewsCategoriesResponse = z.array(zNewsCategoryDto)

export const zCreateNewsCategoryResponse = zNewsCategoryDto

export const zListLanguagesResponse = z.array(zLanguageDto)

export const zCreateLanguageResponse = zLanguageDto

export const zListFieldsResponse = z.array(zFieldDto)

export const zCreateFieldResponse = zFieldUpdateDto

export const zListDocumentsByUserResponse = z.array(zDocumentDto)

export const zCreateDocumentUserResponse = zDocumentDto

export const zCreateDocumentQualityControlResponse = zDocumentDto

export const zListCooperativesResponse = z.array(zCooperativeDto)

export const zCreateCooperativeResponse = zCooperativeDto

export const zListContractOffersResponse = z.array(zContractOfferDto)

export const zCreateContractOfferResponse = zContractOfferDto

export const zListBidsResponse = z.array(zBidDto)

export const zCreateBidResponse = zBidDto

export const zAuthenticateUserResponse = zUserDetailDto

export const zAuthenticateWithGoogleResponse = zUserDetailDto

export const zListAuctionsResponse = z.array(zAuctionDto)

export const zCreateAuctionResponse = zAuctionUpdateDto

export const zListAuctionStrategiesResponse = z.array(zAuctionStrategyDto)

export const zCreateAuctionStrategyResponse = zAuctionStrategyDto

export const zCheckPhoneResponse = z.boolean()

export const zCheckEmailResponse = z.boolean()

export const zListRegionsResponse = z.array(zRegionDto)

export const zSubscribeResponse = zSseEmitter

export const zDeleteDocumentResponse = z.void()

export const zGetDocumentResponse = zDocumentDto

export const zDownloadDocumentResponse = z.string()

export const zGetContractOfferByCriteriaResponse = zContractOfferDto

export const zGetCurrentUserResponse = zUserDetailDto

export const zSubscribe1Response = zSseEmitter

export const zGetAuctionSettingsResponse = zGlobalSettingsDto

export const zGetApplicationDataResponse = zApplicationDataDto

export const zGetUserResponse = zUserDetailDto

export const zGetFilteredDataResponse = z.string()

export const zGetDashboardGraphicSeriesResponse = z.array(zDashboardGraphicDto)

export const zGetDashboardCardsResponse = zDashboardCardsDto
