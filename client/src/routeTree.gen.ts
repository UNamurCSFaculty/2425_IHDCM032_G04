/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as InscriptionSuccesImport } from './routes/inscription-succes'
import { Route as InscriptionImport } from './routes/inscription'
import { Route as ConnexionImport } from './routes/connexion'
import { Route as AdminImport } from './routes/admin'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as R403Import } from './routes/403'
import { Route as IndexImport } from './routes/index'
import { Route as ContactIndexImport } from './routes/contact/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as ContactMerciImport } from './routes/contact/merci'
import { Route as AdminGlobalSettingsImport } from './routes/admin/global-settings'
import { Route as AdminAnalyticsImport } from './routes/admin/analytics'
import { Route as AdminUsersIndexImport } from './routes/admin/users/index'
import { Route as AdminCooperativesIndexImport } from './routes/admin/cooperatives/index'
import { Route as AdminBlogIndexImport } from './routes/admin/blog/index'
import { Route as AuthenticatedVentesNouvelleEnchereImport } from './routes/_authenticated/ventes/nouvelle-enchere'
import { Route as AuthenticatedVentesMesEncheresImport } from './routes/_authenticated/ventes/mes-encheres'
import { Route as AuthenticatedDepotsNouveauProduitImport } from './routes/_authenticated/depots/nouveau-produit'
import { Route as AuthenticatedDepotsMesProduitsImport } from './routes/_authenticated/depots/mes-produits'
import { Route as AuthenticatedAchatsMesEncheresImport } from './routes/_authenticated/achats/mes-encheres'
import { Route as AuthenticatedAchatsMarcheImport } from './routes/_authenticated/achats/marche'

// Create/Update Routes

const InscriptionSuccesRoute = InscriptionSuccesImport.update({
  id: '/inscription-succes',
  path: '/inscription-succes',
  getParentRoute: () => rootRoute,
} as any)

const InscriptionRoute = InscriptionImport.update({
  id: '/inscription',
  path: '/inscription',
  getParentRoute: () => rootRoute,
} as any)

const ConnexionRoute = ConnexionImport.update({
  id: '/connexion',
  path: '/connexion',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const R403Route = R403Import.update({
  id: '/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ContactIndexRoute = ContactIndexImport.update({
  id: '/contact/',
  path: '/contact/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const ContactMerciRoute = ContactMerciImport.update({
  id: '/contact/merci',
  path: '/contact/merci',
  getParentRoute: () => rootRoute,
} as any)

const AdminGlobalSettingsRoute = AdminGlobalSettingsImport.update({
  id: '/global-settings',
  path: '/global-settings',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAnalyticsRoute = AdminAnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => AdminRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminCooperativesIndexRoute = AdminCooperativesIndexImport.update({
  id: '/cooperatives/',
  path: '/cooperatives/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminBlogIndexRoute = AdminBlogIndexImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => AdminRoute,
} as any)

const AuthenticatedVentesNouvelleEnchereRoute =
  AuthenticatedVentesNouvelleEnchereImport.update({
    id: '/ventes/nouvelle-enchere',
    path: '/ventes/nouvelle-enchere',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedVentesMesEncheresRoute =
  AuthenticatedVentesMesEncheresImport.update({
    id: '/ventes/mes-encheres',
    path: '/ventes/mes-encheres',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDepotsNouveauProduitRoute =
  AuthenticatedDepotsNouveauProduitImport.update({
    id: '/depots/nouveau-produit',
    path: '/depots/nouveau-produit',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDepotsMesProduitsRoute =
  AuthenticatedDepotsMesProduitsImport.update({
    id: '/depots/mes-produits',
    path: '/depots/mes-produits',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAchatsMesEncheresRoute =
  AuthenticatedAchatsMesEncheresImport.update({
    id: '/achats/mes-encheres',
    path: '/achats/mes-encheres',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAchatsMarcheRoute = AuthenticatedAchatsMarcheImport.update({
  id: '/achats/marche',
  path: '/achats/marche',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/403': {
      id: '/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof R403Import
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/connexion': {
      id: '/connexion'
      path: '/connexion'
      fullPath: '/connexion'
      preLoaderRoute: typeof ConnexionImport
      parentRoute: typeof rootRoute
    }
    '/inscription': {
      id: '/inscription'
      path: '/inscription'
      fullPath: '/inscription'
      preLoaderRoute: typeof InscriptionImport
      parentRoute: typeof rootRoute
    }
    '/inscription-succes': {
      id: '/inscription-succes'
      path: '/inscription-succes'
      fullPath: '/inscription-succes'
      preLoaderRoute: typeof InscriptionSuccesImport
      parentRoute: typeof rootRoute
    }
    '/admin/analytics': {
      id: '/admin/analytics'
      path: '/analytics'
      fullPath: '/admin/analytics'
      preLoaderRoute: typeof AdminAnalyticsImport
      parentRoute: typeof AdminImport
    }
    '/admin/global-settings': {
      id: '/admin/global-settings'
      path: '/global-settings'
      fullPath: '/admin/global-settings'
      preLoaderRoute: typeof AdminGlobalSettingsImport
      parentRoute: typeof AdminImport
    }
    '/contact/merci': {
      id: '/contact/merci'
      path: '/contact/merci'
      fullPath: '/contact/merci'
      preLoaderRoute: typeof ContactMerciImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/contact/': {
      id: '/contact/'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/achats/marche': {
      id: '/_authenticated/achats/marche'
      path: '/achats/marche'
      fullPath: '/achats/marche'
      preLoaderRoute: typeof AuthenticatedAchatsMarcheImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/achats/mes-encheres': {
      id: '/_authenticated/achats/mes-encheres'
      path: '/achats/mes-encheres'
      fullPath: '/achats/mes-encheres'
      preLoaderRoute: typeof AuthenticatedAchatsMesEncheresImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/depots/mes-produits': {
      id: '/_authenticated/depots/mes-produits'
      path: '/depots/mes-produits'
      fullPath: '/depots/mes-produits'
      preLoaderRoute: typeof AuthenticatedDepotsMesProduitsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/depots/nouveau-produit': {
      id: '/_authenticated/depots/nouveau-produit'
      path: '/depots/nouveau-produit'
      fullPath: '/depots/nouveau-produit'
      preLoaderRoute: typeof AuthenticatedDepotsNouveauProduitImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/ventes/mes-encheres': {
      id: '/_authenticated/ventes/mes-encheres'
      path: '/ventes/mes-encheres'
      fullPath: '/ventes/mes-encheres'
      preLoaderRoute: typeof AuthenticatedVentesMesEncheresImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/ventes/nouvelle-enchere': {
      id: '/_authenticated/ventes/nouvelle-enchere'
      path: '/ventes/nouvelle-enchere'
      fullPath: '/ventes/nouvelle-enchere'
      preLoaderRoute: typeof AuthenticatedVentesNouvelleEnchereImport
      parentRoute: typeof AuthenticatedImport
    }
    '/admin/blog/': {
      id: '/admin/blog/'
      path: '/blog'
      fullPath: '/admin/blog'
      preLoaderRoute: typeof AdminBlogIndexImport
      parentRoute: typeof AdminImport
    }
    '/admin/cooperatives/': {
      id: '/admin/cooperatives/'
      path: '/cooperatives'
      fullPath: '/admin/cooperatives'
      preLoaderRoute: typeof AdminCooperativesIndexImport
      parentRoute: typeof AdminImport
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof AdminImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedAchatsMarcheRoute: typeof AuthenticatedAchatsMarcheRoute
  AuthenticatedAchatsMesEncheresRoute: typeof AuthenticatedAchatsMesEncheresRoute
  AuthenticatedDepotsMesProduitsRoute: typeof AuthenticatedDepotsMesProduitsRoute
  AuthenticatedDepotsNouveauProduitRoute: typeof AuthenticatedDepotsNouveauProduitRoute
  AuthenticatedVentesMesEncheresRoute: typeof AuthenticatedVentesMesEncheresRoute
  AuthenticatedVentesNouvelleEnchereRoute: typeof AuthenticatedVentesNouvelleEnchereRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAchatsMarcheRoute: AuthenticatedAchatsMarcheRoute,
  AuthenticatedAchatsMesEncheresRoute: AuthenticatedAchatsMesEncheresRoute,
  AuthenticatedDepotsMesProduitsRoute: AuthenticatedDepotsMesProduitsRoute,
  AuthenticatedDepotsNouveauProduitRoute:
    AuthenticatedDepotsNouveauProduitRoute,
  AuthenticatedVentesMesEncheresRoute: AuthenticatedVentesMesEncheresRoute,
  AuthenticatedVentesNouvelleEnchereRoute:
    AuthenticatedVentesNouvelleEnchereRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren
)

interface AdminRouteChildren {
  AdminAnalyticsRoute: typeof AdminAnalyticsRoute
  AdminGlobalSettingsRoute: typeof AdminGlobalSettingsRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminBlogIndexRoute: typeof AdminBlogIndexRoute
  AdminCooperativesIndexRoute: typeof AdminCooperativesIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAnalyticsRoute: AdminAnalyticsRoute,
  AdminGlobalSettingsRoute: AdminGlobalSettingsRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminBlogIndexRoute: AdminBlogIndexRoute,
  AdminCooperativesIndexRoute: AdminCooperativesIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/403': typeof R403Route
  '': typeof AuthenticatedRouteWithChildren
  '/admin': typeof AdminRouteWithChildren
  '/connexion': typeof ConnexionRoute
  '/inscription': typeof InscriptionRoute
  '/inscription-succes': typeof InscriptionSuccesRoute
  '/admin/analytics': typeof AdminAnalyticsRoute
  '/admin/global-settings': typeof AdminGlobalSettingsRoute
  '/contact/merci': typeof ContactMerciRoute
  '/admin/': typeof AdminIndexRoute
  '/contact': typeof ContactIndexRoute
  '/achats/marche': typeof AuthenticatedAchatsMarcheRoute
  '/achats/mes-encheres': typeof AuthenticatedAchatsMesEncheresRoute
  '/depots/mes-produits': typeof AuthenticatedDepotsMesProduitsRoute
  '/depots/nouveau-produit': typeof AuthenticatedDepotsNouveauProduitRoute
  '/ventes/mes-encheres': typeof AuthenticatedVentesMesEncheresRoute
  '/ventes/nouvelle-enchere': typeof AuthenticatedVentesNouvelleEnchereRoute
  '/admin/blog': typeof AdminBlogIndexRoute
  '/admin/cooperatives': typeof AdminCooperativesIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/403': typeof R403Route
  '': typeof AuthenticatedRouteWithChildren
  '/connexion': typeof ConnexionRoute
  '/inscription': typeof InscriptionRoute
  '/inscription-succes': typeof InscriptionSuccesRoute
  '/admin/analytics': typeof AdminAnalyticsRoute
  '/admin/global-settings': typeof AdminGlobalSettingsRoute
  '/contact/merci': typeof ContactMerciRoute
  '/admin': typeof AdminIndexRoute
  '/contact': typeof ContactIndexRoute
  '/achats/marche': typeof AuthenticatedAchatsMarcheRoute
  '/achats/mes-encheres': typeof AuthenticatedAchatsMesEncheresRoute
  '/depots/mes-produits': typeof AuthenticatedDepotsMesProduitsRoute
  '/depots/nouveau-produit': typeof AuthenticatedDepotsNouveauProduitRoute
  '/ventes/mes-encheres': typeof AuthenticatedVentesMesEncheresRoute
  '/ventes/nouvelle-enchere': typeof AuthenticatedVentesNouvelleEnchereRoute
  '/admin/blog': typeof AdminBlogIndexRoute
  '/admin/cooperatives': typeof AdminCooperativesIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/403': typeof R403Route
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/admin': typeof AdminRouteWithChildren
  '/connexion': typeof ConnexionRoute
  '/inscription': typeof InscriptionRoute
  '/inscription-succes': typeof InscriptionSuccesRoute
  '/admin/analytics': typeof AdminAnalyticsRoute
  '/admin/global-settings': typeof AdminGlobalSettingsRoute
  '/contact/merci': typeof ContactMerciRoute
  '/admin/': typeof AdminIndexRoute
  '/contact/': typeof ContactIndexRoute
  '/_authenticated/achats/marche': typeof AuthenticatedAchatsMarcheRoute
  '/_authenticated/achats/mes-encheres': typeof AuthenticatedAchatsMesEncheresRoute
  '/_authenticated/depots/mes-produits': typeof AuthenticatedDepotsMesProduitsRoute
  '/_authenticated/depots/nouveau-produit': typeof AuthenticatedDepotsNouveauProduitRoute
  '/_authenticated/ventes/mes-encheres': typeof AuthenticatedVentesMesEncheresRoute
  '/_authenticated/ventes/nouvelle-enchere': typeof AuthenticatedVentesNouvelleEnchereRoute
  '/admin/blog/': typeof AdminBlogIndexRoute
  '/admin/cooperatives/': typeof AdminCooperativesIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/403'
    | ''
    | '/admin'
    | '/connexion'
    | '/inscription'
    | '/inscription-succes'
    | '/admin/analytics'
    | '/admin/global-settings'
    | '/contact/merci'
    | '/admin/'
    | '/contact'
    | '/achats/marche'
    | '/achats/mes-encheres'
    | '/depots/mes-produits'
    | '/depots/nouveau-produit'
    | '/ventes/mes-encheres'
    | '/ventes/nouvelle-enchere'
    | '/admin/blog'
    | '/admin/cooperatives'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/403'
    | ''
    | '/connexion'
    | '/inscription'
    | '/inscription-succes'
    | '/admin/analytics'
    | '/admin/global-settings'
    | '/contact/merci'
    | '/admin'
    | '/contact'
    | '/achats/marche'
    | '/achats/mes-encheres'
    | '/depots/mes-produits'
    | '/depots/nouveau-produit'
    | '/ventes/mes-encheres'
    | '/ventes/nouvelle-enchere'
    | '/admin/blog'
    | '/admin/cooperatives'
    | '/admin/users'
  id:
    | '__root__'
    | '/'
    | '/403'
    | '/_authenticated'
    | '/admin'
    | '/connexion'
    | '/inscription'
    | '/inscription-succes'
    | '/admin/analytics'
    | '/admin/global-settings'
    | '/contact/merci'
    | '/admin/'
    | '/contact/'
    | '/_authenticated/achats/marche'
    | '/_authenticated/achats/mes-encheres'
    | '/_authenticated/depots/mes-produits'
    | '/_authenticated/depots/nouveau-produit'
    | '/_authenticated/ventes/mes-encheres'
    | '/_authenticated/ventes/nouvelle-enchere'
    | '/admin/blog/'
    | '/admin/cooperatives/'
    | '/admin/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R403Route: typeof R403Route
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AdminRoute: typeof AdminRouteWithChildren
  ConnexionRoute: typeof ConnexionRoute
  InscriptionRoute: typeof InscriptionRoute
  InscriptionSuccesRoute: typeof InscriptionSuccesRoute
  ContactMerciRoute: typeof ContactMerciRoute
  ContactIndexRoute: typeof ContactIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R403Route: R403Route,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AdminRoute: AdminRouteWithChildren,
  ConnexionRoute: ConnexionRoute,
  InscriptionRoute: InscriptionRoute,
  InscriptionSuccesRoute: InscriptionSuccesRoute,
  ContactMerciRoute: ContactMerciRoute,
  ContactIndexRoute: ContactIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/403",
        "/_authenticated",
        "/admin",
        "/connexion",
        "/inscription",
        "/inscription-succes",
        "/contact/merci",
        "/contact/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/403": {
      "filePath": "403.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/achats/marche",
        "/_authenticated/achats/mes-encheres",
        "/_authenticated/depots/mes-produits",
        "/_authenticated/depots/nouveau-produit",
        "/_authenticated/ventes/mes-encheres",
        "/_authenticated/ventes/nouvelle-enchere"
      ]
    },
    "/admin": {
      "filePath": "admin.tsx",
      "children": [
        "/admin/analytics",
        "/admin/global-settings",
        "/admin/",
        "/admin/blog/",
        "/admin/cooperatives/",
        "/admin/users/"
      ]
    },
    "/connexion": {
      "filePath": "connexion.tsx"
    },
    "/inscription": {
      "filePath": "inscription.tsx"
    },
    "/inscription-succes": {
      "filePath": "inscription-succes.tsx"
    },
    "/admin/analytics": {
      "filePath": "admin/analytics.tsx",
      "parent": "/admin"
    },
    "/admin/global-settings": {
      "filePath": "admin/global-settings.tsx",
      "parent": "/admin"
    },
    "/contact/merci": {
      "filePath": "contact/merci.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/contact/": {
      "filePath": "contact/index.tsx"
    },
    "/_authenticated/achats/marche": {
      "filePath": "_authenticated/achats/marche.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/achats/mes-encheres": {
      "filePath": "_authenticated/achats/mes-encheres.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/depots/mes-produits": {
      "filePath": "_authenticated/depots/mes-produits.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/depots/nouveau-produit": {
      "filePath": "_authenticated/depots/nouveau-produit.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/ventes/mes-encheres": {
      "filePath": "_authenticated/ventes/mes-encheres.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/ventes/nouvelle-enchere": {
      "filePath": "_authenticated/ventes/nouvelle-enchere.tsx",
      "parent": "/_authenticated"
    },
    "/admin/blog/": {
      "filePath": "admin/blog/index.tsx",
      "parent": "/admin"
    },
    "/admin/cooperatives/": {
      "filePath": "admin/cooperatives/index.tsx",
      "parent": "/admin"
    },
    "/admin/users/": {
      "filePath": "admin/users/index.tsx",
      "parent": "/admin"
    }
  }
}
ROUTE_MANIFEST_END */
