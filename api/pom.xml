<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>be.labil</groupId>
	<artifactId>anacarde</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<name>e-Anacarde</name>
	<description>e-Anacarde is an e-commerce platform designed for cashew trading in Benin. Initially a proof-of-concept, it helps stakeholders refine their needs and expectations. Built for flexibility, it can evolve to support other sectors like cereals, manufactured goods, and raw materials.</description>
	<url/>
	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://opensource.org/licenses/MIT</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>fabricecipolla</id>
			<name>Fabrice Cipolla</name>
			<email>fabrice@example.com</email>
			<organization>Universit√© de Namur</organization>
			<organizationUrl>https://www.unamur.be</organizationUrl>
			<url>https://github.com/fabriceci</url>
		</developer>
		<developer>
			<id>zfares</id>
			<name>Fares Zakaria</name>
			<email>zakaria.fares@student.unamur.be</email>
			<url>https://github.com/zakensen</url>
		</developer>
		<developer>
			<id>rlahaye</id>
			<name>Lahaye Romain</name>
			<email>romain.lahaye@student.unamur.be</email>
			<url>https://github.com/rlahaye</url>
		</developer>
	</developers>
	<properties>
		<java.version>21</java.version>
		<org.mapstruct.version>1.6.3</org.mapstruct.version>
		<springdoc-openapi.version>2.8.5</springdoc-openapi.version>
		<postgresql.version>42.7.5</postgresql.version>
		<slf4j.version>2.0.16</slf4j.version>
		<logback.version>1.5.16</logback.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<jjwt.version>0.12.6</jjwt.version>
		<h2gis.version>2.2.3</h2gis.version>
		<hibernate-spatial.version>6.6.13.Final</hibernate-spatial.version>
		<maven.surefire.plugin.version>3.5.2</maven.surefire.plugin.version>
		<spotless.version>2.44.3</spotless.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc-openapi.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mapstruct/mapstruct -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok-mapstruct-binding</artifactId>
			<version>${lombok-mapstruct-binding.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
		<dependency>
			<groupId>org.orbisgis</groupId>
			<artifactId>h2gis</artifactId>
			<version>${h2gis.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-spatial</artifactId>
			<version>${hibernate-spatial.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${lombok-mapstruct-binding.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<image>
						<!-- Use a different builder for the image (based on musl)
						<builder>bellsoft/buildpacks.builder:musl</builder>
						<imagePlatform>linux/amd64</imagePlatform>
						-->
						<env>
							<!--
							<BP_SPRING_AOT_ENABLED>true</BP_SPRING_AOT_ENABLED>
							<BP_JVM_CDS_ENABLED>true</BP_JVM_CDS_ENABLED>
							<JAVA_TOOL_OPTIONS>-XX:+UseZGC</JAVA_TOOL_OPTIONS>
							<BP_JVM_VERSION>21</BP_JVM_VERSION>
							<BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
							<BP_BINARY_COMPRESSION_METHOD>upx</BP_BINARY_COMPRESSION_METHOD>
							-->
						</env>
					</image>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<argLine>
						@{argLine} -javaagent:"${settings.localRepository}/net/bytebuddy/byte-buddy-agent/1.15.11/byte-buddy-agent-1.15.11.jar"
					</argLine>

					<systemPropertyVariables>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			            <!-- Code coverage -->
			<plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <configuration>
                    <excludes>
						<exclude>**/generated-sources/**</exclude>
						<exclude>**/test-classes/**</exclude>
						<exclude>**/test-outputs/**</exclude>
						<exclude>**/target/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate-code-coverage-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.graalvm.buildtools</groupId>
				<artifactId>native-maven-plugin</artifactId>
				<configuration>
					<imageName>app-native-binary</imageName>
					<metadataRepository>
						<enabled>true</enabled>
					</metadataRepository>
					<buildArgs>
						<buildArg>-H:+ReportExceptionStackTraces</buildArg>
					</buildArgs>
					<mainClass>be.labil.anacarde.AnacardeApplication</mainClass>
				</configuration>
				<!--
				<executions>
					<execution>
						<id>add-reachability-metadata</id>
						<goals>
							<goal>add-reachability-metadata</goal>
						</goals>
					</execution>
				</executions>
				-->
			</plugin>
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>${spotless.version}</version>
				<configuration>
					<java>
						<eclipse>
							<file>${basedir}/eclipse-java-formatter.xml</file>
						</eclipse>
						<importOrder />
						<removeUnusedImports />
						<excludes>
							<exclude>**/*.expected</exclude>
						</excludes>
					</java>
				</configuration>
				<executions>
					<execution>
						<id>apply-spotless</id>
						<phase>process-sources</phase>
						<goals>
							<goal>apply</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>
