openapi: 3.0.3

info: 
  title: e-Anacarde API
  version: "0.1"
  description: |-
    An API for interacting with the **e-Anacarde** application.
    
    ![UNamur Logo](https://www.unamur.be/themes/custom/unamur_theme/logo.svg)
    
    ---
  contact:
    name: Labo Ing. Logicielle / Groupe 04
    email: foo@unamur.be
    url: http://www.unamur.be
  license:
    url:  https://www.apache.org/licenses/LICENSE-2.0.html
    name: Apache 2.0

tags:
  - name: Users
    description: Users and Authentication

servers:
- url: http://localhost:8080/api/v1

paths:
  /users:
    get:
      summary: View all Users
      operationId: viewUsers
      tags: 
        - Users
      description: Get a list of Users
      parameters:
        - name: category
          description: Filter users by category
          in: query
          schema:
            type: string
            enum:
              - bidder
              - carrier
              - quality_manager
      responses:
        '200': 
          description: A list of Users
          content:
            application/json:
              schema:
                type: object
                properties:
                  items: 
                    type: array
                    items: 
                      $ref: '#/components/schemas/User'
  
    post:
      summary: Create User
      operationId: createUser
      tags: 
          - Users              
      responses:
        '201':
          description: "Created"
          headers:
            Location:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
        
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'

        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'          

      requestBody:
        description: "Create a User"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
                      
  /users/{id}:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
    
    get:
      summary: View User
      operationId: viewUserWithId
      tags: 
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    
    put:
      summary: Modify User
      operationId: modifyUserWithId
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    delete:
      summary: Delete User
      operationId: deleteUserWithId
      responses:
        '204':
          description: No Content

components:
  schemas:
    User:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              readOnly: true
            first_name:
              type: string
            last_name:
              type: string
            email:
              type: string
            password:
              type: string
              writeOnly: true
              minLength: 8
            phone:
              type: string
            address:
              type: string
            register_date:
              type: string
              readOnly: true
            is_active:
              type: boolean
              readOnly: true
              default: false
            category:
              type: string
              enum:
                - bidder
                - carrier
                - quality_manager
          required:
            - first_name
            - last_name
            - email
            - phone 
            - address
        - oneOf:
          - $ref: '#components/schemas/Bidder'
          - $ref: '#components/schemas/Carrier'
          - $ref: '#components/schemas/QualityManager'
          - $ref: '#components/schemas/StoreManager'
        - discriminator:
            propertyName: category
            mapping:
              Bidder: '#components/schemas/Bidder'
              Carrier: '#components/schemas/Carrier'
              QualityManager: '#components/schemas/QualityManager'
              StoreManager: '#components/schemas/StoreManager'
  
    Bidder:
      type: object
      properties:
        category:
          type: string
      required:
        - category

    Carrier:
      type: object
      properties:
        category:
          type: string
      required:
        - category

    QualityManager:
      type: object
      properties:
        category:
          type: string
      required:
        - category

    StoreManager:
      type: object
      properties:
        category:
          type: string
      required:
        - category

    OASError:
      type: object
      properties: 
        message:
          type: string
          description: human-readable error message
        errors:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
                description: |
                  For input validation errors, identifies where in the 
                  JSON request body the error occurred.
              message:
                type: string 
                description: Human-readable error message.
              errorCode:
                type: string
                description: Code indicating error type.
        
